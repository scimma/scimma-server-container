#!/usr/bin/perl
use warnings;
use strict;
use Getopt::Long;

my($opt_Help);
my($opt_ServerString);
my($opt_Topic);
GetOptions("help"     => \$opt_Help,
	   "topic=s"  => \$opt_Topic,
	   "server=s" => \$opt_ServerString,
);

my($cmd) = $ARGV[0];
if (!defined($cmd)) {
    printf("No Command.\n");
    printUsage();
    exit(0);
}

my(@commands) = ('consumer', 'producer');
my($fullCommand);
$fullCommand->{'consumer'} = '/opt/kafka/bin/kafka-console-consumer.sh';
$fullCommand->{'producer'} = '/opt/kafka/bin/kafka-console-producer.sh';

my($c);
my($cFound) = 0;
for $c (@commands) {
    if ($c =~ /^$cmd/) {
	$cmd = $c;
	$cFound = 1;
	last;
    }
}

if (!$cFound) {
    printf("Command not found: %s\n", $cmd);
    printf("\n");
    printUsage();
    exit(-1);
}

# In this case, $cmd is defined and valid and --help was specifiied.
if (defined($opt_Help)) {
    runCommandNoArgs($cmd);
    exit(0);
}

my($serverString) = "127.0.0.2:9092";
if (defined($opt_ServerString)) {
    $serverString = $opt_ServerString;
}

my($topic) = "test";
if (defined($opt_Topic)) {
    $topic = $opt_Topic;
}

printf("Server: %s\n", $serverString);
printf("Topic: %s\n", $topic);
printf("Command: %s\n", $cmd);
printf("Kafka Command: %s\n", $fullCommand->{$cmd});

my($commandToRun);

if ($cmd eq 'consumer') {
    printf("Messages for topic \"%s\" on server \"%s\"\n", $topic, $serverString);
    $commandToRun = sprintf("%s --bootstrap-server %s --topic '%s' --from-beginning", $fullCommand->{$cmd},
			    $serverString, $topic);
} elsif ($cmd eq 'producer') {
    printf("Enter one line per message:\n");
    $commandToRun = sprintf("%s --broker-list %s --topic '%s'", $fullCommand->{$cmd},
			    $serverString, $topic);    
}

system($commandToRun);
exit(0);

###
### Not reached.
###

sub printUsage {
    printf("\nThis is the default command for the scimma/client docker container.\n");
    printf("You can give the following arguments on the docker run command line:\n");
    printf("\n  COMMAND --server=SERVER_STRING --topic=TOPIC\n\n");
    printf("COMMAND is either \"producer\" or \"consumer\". Topic must be\n");
    printf("a string with no spaces. SERVER_STRING is of the form\n\n");
    printf("      HOST:PORT\n\n");
    printf("The default SERVER_STRING is \"127.0.0.2\". The default topic is\n");
    printf("\"test\". The COMMAND string is not optional. Running the container\n");
    printf("without a COMMAND prints this usage message.\n\n");
    printf("This container has a full kafka client installation and, by default\n");
    printf("runs a thin wrapper around docker shell scripts and tries to be helpful.\n");
    printf("\n");
}
